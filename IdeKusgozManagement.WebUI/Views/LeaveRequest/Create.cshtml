@{
    ViewData["Title"] = "İzin Taleplerim";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
    <link href="~/theme/assets/plugins/DataTables/datatables.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
    <style>
        .fa-calendar {
            cursor: pointer;
        }

            .fa-calendar:hover {
                color: #007bff;
            }

        a {
            margin-left: 20px;
        }
    </style>
}
@Html.AntiForgeryToken()
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">
                    <i class="fas fa-calendar-check me-2"></i>
                    İzin Taleplerim
                </h5>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal"
                        data-bs-target="#createLeaveRequestModal">
                    <i class="fas fa-plus me-2"></i>İzin Talebi Oluştur
                </button>
                <br />
                <br />
                <div class="table-responsive">
                    <table id="myLeaveRequestsTable" class="table table-striped table-hover display" style="width:100%">
                        <thead class="table-dark">
                            <tr>
                                <th>#</th>
                                <th>BAŞLANGIÇ<br /> TARİHİ</th>
                                <th>BİTİŞ<br /> TARİHİ</th>
                                <th>NET<br /> SÜRE</th>
                                <th>TALEP<br />NEDENİ</th>
                                <th>DURUM</th>
                                <th>DÖKÜMAN</th>
                                <th>OLUŞTURMA<br /> TARİHİ</th>
                                <th>DURUM<br />DEĞİŞTİRİLME<br /> TARİHİ</th>
                                <th>İŞLEMLER</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- DataTables will populate this -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Create Leave Request Modal -->
<div class="modal fade" id="createLeaveRequestModal" tabindex="-1" aria-labelledby="createLeaveRequestModalLabel"
     aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">İzin Talebi Oluşturma Penceresi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="createLeaveRequestForm" class="needs-validation" novalidate>
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-md-12">
                            <label for="date-leave" class="form-label">İzin Tarih Aralığı</label>
                            <div class="input-group">

                                <input type="text" class="form-control date-leave" id="date-leave" required
                                       placeholder="Başlangıç - Bitiş"> <span class="input-group-text">
                                    <i class="fas fa-calendar"></i>
                                </span>
                            </div>

                            <div class="valid-feedback">İyi görünüyor!</div>
                            <div class="invalid-feedback">Geçerli bir tarih aralığı seçiniz.</div>
                        </div>

                        <div class="col-md-12">
                            <label for="select-leave-reason" class="form-label">İzin Türü</label>
                            <select class="form-select select-leave-reason" id="select-leave-reason" required>
                                <option value="" selected disabled>İzin türü seçiniz...</option>
                                <option value="Rapor">Rapor</option>
                                <option value="Ücretsiz İzin">Ücretsiz İzin</option>
                                <option value="Yıllık İzin">Yıllık İzin</option>
                                <option value="Babalık İzni">Babalık İzni</option>
                                <option value="İdari İzin">İdari İzin (Serbest Zaman İzni)</option>
                                <option value="Cenaze İzni">Cenaze İzni</option>
                                <option value="Evlilik İzni">Evlilik İzni</option>
                                <option value="Süt İzni">Süt İzni</option>
                                @if (!User.IsInRole("Personel"))
                                {
                                    <option value="Devamsızlık">Devamsızlık</option>
                                }
                            </select>
                            <div class="valid-feedback">İyi görünüyor!</div>
                            <div class="invalid-feedback">Geçerli izin türü seçiniz.</div>
                        </div>

                        <div class="col-md-12">
                            <label for="txt-description" class="form-label">Açıklama (İsteğe Bağlı)</label>
                            <textarea class="form-control" id="txt-description" rows="3"
                                      placeholder="Açıklama..."></textarea>
                        </div>
                        <div class="col-md-12">
                            <label for="file-document" class="form-label">Döküman (İsteğe Bağlı)</label>
                            <input class="form-control" type="file" id="file-document"
                                   accept=".jpg,.jpeg,.png,.pdf,.doc,.docx" required>
                            <div class="form-text">
                                Desteklenen formatlar: PDF, JPG, JPEG, PNG, DOC, DOCX
                            </div>
                            <div class="valid-feedback">İyi görünüyor!</div>
                            <div class="invalid-feedback">Lütfen geçerli bir dosya seçiniz.</div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary w-100" data-bs-dismiss="modal">Kapat</button>
                    <button type="submit" class="btn btn-primary w-100"><i class="fas fa-plus me-1"></i>Oluştur</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script src="~/theme/assets/plugins/DataTables/datatables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
        let myLeaveRequestsTable;

        $(document).ready(async function () {
            await initializeDataTable();

            var turkishLocale = {
                "format": 'DD/MM/YYYY',
                "separator": ' - ',
                "applyLabel": 'Uygula',
                "cancelLabel": 'İptal',
                "fromLabel": 'Başlangıç',
                "toLabel": 'Bitiş',
                "customRangeLabel": 'Özel',
                "weekLabel": 'Hf',
                "daysOfWeek": [
                    "Pz",
                    "Pt",
                    "Sl",
                    "Çr",
                    "Pr",
                    "Cm",
                    "Ct"
                ], "monthNames": ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'],
                "firstDay": 1

            };

            $('#date-leave').daterangepicker({
                locale: turkishLocale,
                opens: 'left',
                autoUpdateInput: false,
                autoApply: true

            });

            $('#date-leave').on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
            });

            $('#date-leave').on('cancel.daterangepicker', function (ev, picker) {
                $(this).val('');
            });

            $('.fa-calendar').parent().on('click', function () {
                $(this).closest('.input-group').find('.date-leave').focus();
            });
            $('#createLeaveRequestForm').on('submit', function (e) {
                e.preventDefault();
                if (this.checkValidity()) {
                    createLeaveRequest();
                }
                $(this).addClass('was-validated');
            });

        });
        async function initializeDataTable() {
            myLeaveRequestsTable = $('#myLeaveRequestsTable').DataTable({
                "processing": true,
                "ajax": {
                    "url": "/izin/listem",
                    "type": "GET",
                    "dataSrc": function (json) {
                        if (json && json.isSuccess && json.data) {
                            return json.data;
                        }
                        return [];
                    },
                    "error": function (xhr, error, code) {
                        console.error('DataTables AJAX error:', error);
                        let errorMessage = 'Veriler yüklenirken hata oluştu';
                        try {
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage += ': ' + xhr.responseJSON.message;
                            } else if (xhr.responseText) {
                                errorMessage += ': ' + xhr.responseText;
                            }
                        } catch (e) {
                            errorMessage += ': ' + error;
                        }
                        toastr.error(errorMessage);
                    }
                },
                "columns": [
                    {
                        "data": null,
                        "width": "5%",
                        "orderable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            return '';
                        }
                    },
                    {
                        "data": "startDate",
                        "render": function (data) {
                            return data ? new Date(data).toLocaleDateString('tr-TR') : '';
                        }
                    },
                    {
                        "data": "endDate",
                        "render": function (data) {
                            return data ? new Date(data).toLocaleDateString('tr-TR') : '';
                        }
                    },
                    {
                        "data": "duration",
                        "className": "text-center",
                        "render": function (data) {
                            return data || '';
                        }
                    },
                    {
                        "data": "reason",
                        "render": function (data) {
                            return data || '';
                        }
                    },
                    {
                        "data": "statusText",
                        "className": "text-center",
                        "render": function (data, type, row) {
                            if (row.status === 0) {
                                return `<span class="badge bg-warning">${data}</span>`;
                            } else if (row.status === 1) {
                                return `<span class="badge bg-success">${data}</span>`;
                            } else if (row.status === 2) {
                                return `<span class="badge bg-danger">${data}</span>`;
                            } else {
                                return `<span class="badge bg-secondary">${data}</span>`;
                            }
                        }
                    },
                     {
                        "data": "fileId",
                        "render": function (data, type, row) {
                            return `<a href="/dosya/indir/${data}"
                                                           download
                                                           class="text-muted text-decoration-underline">
                                                            <i class="fas fa-file fa-lg"></i>
                                                        </a>`;
                        }
                    },
                    {
                        "data": "createdDate",
                        "render": function (data) {
                        return data ? new Date(data).toLocaleString('tr-TR', {
                                  year: 'numeric',
                                  month: '2-digit',
                                  day: '2-digit',
                                  hour: '2-digit',
                                  minute: '2-digit'
                              }) : '';
                        }
                    },
                      {
                        "data": "updatedDate",
                        "render": function (data) {
                        return data ? new Date(data).toLocaleString('tr-TR', {
                                  year: 'numeric',
                                  month: '2-digit',
                                  day: '2-digit',
                                  hour: '2-digit',
                                  minute: '2-digit'
                              }) : '';
                        }
                    },
                    {
                        "data": null,
                        "width": "10%",
                        "orderable": false,
                        "className": "text-center",
                        "render": function (data, type, row) {
                            return row.status === 0 ? `
                                                                            <div class="btn-group btn-group-sm" role="group">
                                                                                <button type="button" class="btn btn-outline-danger btn-sm"
                                                                                    onclick="deleteLeaveRequest('${row.id}')" title="Sil">
                                                                                    <i class="fas fa-trash"></i>
                                                                                </button>
                                                                            </div>
                                                                        ` : "";

                        }
                    }
                ],
                "language": {
                    url: 'https://cdn.datatables.net/plug-ins/2.3.2/i18n/tr.json'
                },
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                "pageLength": 10,
                "responsive": true,
                "searchDelay": 300,
                "order": [[6, "desc"]], // Order by created date desc
                "drawCallback": function () {
                    var api = this.api();
                    var pageInfo = api.page.info();

                    api.column(0, { page: 'current' }).nodes().each(function (cell, i) {
                        cell.innerHTML = pageInfo.start + i + 1;
                    });
                    $('[title]').tooltip();
                }
            });
        }

              async function createLeaveRequest() {
            var picker = $('#date-leave').data('daterangepicker');
            var startDate = picker.startDate.format('YYYY-MM-DD');
            var endDate = picker.endDate.format('YYYY-MM-DD');

            // Create FormData for file upload support
            const formData = new FormData();
            formData.append('StartDate', startDate);
            formData.append('EndDate', endDate);
            formData.append('Reason', $('#select-leave-reason').val());
            formData.append('Description', $('#txt-description').val().trim());
            formData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());

            // Add file if uploaded
            const file = $('#file-document')[0];
            if (file.files.length > 0) {
                formData.append('File.FormFile', file.files[0]);
            }

            try {
                const response = await $.ajax({
                    url: '/izin/istek-olustur',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                });

                if (response.isSuccess) {
                    toastr.success(response.message, 'Başarılı!');
                    $('#createLeaveRequestModal').modal('hide');
                    myLeaveRequestsTable.ajax.reload(null, false);

                    // Reset form
                    $('#date-leave').val('');
                    $('#select-leave-reason').val(0);
                    $('#txt-description').val('');
                    $('#file-document').val('');
                } else {
                    toastr.error(response.message, 'Hata!');
                }
            } catch (error) {
                console.error('Create leave request error:', error);
                toastr.error(error.responseJSON?.message || 'Bir hata oluştu!', 'Hata!');
            }
        }

             async function deleteLeaveRequest(leaveRequestId) {
            try {
                const result = await Swal.fire({
                    title: 'İzin Talebini Sil',
                    text: 'Bu izin talebini silmek istediğinizden emin misiniz? Bu işlem geri alınamaz!',
                    icon: 'error',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: '<i class="fas fa-trash"></i> Evet, Sil',
                    cancelButtonText: '<i class="fas fa-times"></i> İptal',
                    showLoaderOnConfirm: true,
                    preConfirm: async () => {
                        try {
                            const response = await $.ajax({
                                url: `/izin/${leaveRequestId}`,
                                type: 'DELETE',
                                contentType: 'application/json',
                                headers: {
                                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                                }
                            });
                            return response;
                        } catch (error) {
                            let errorMessage = 'Silme başarısız';
                            if (error.responseJSON) {
                                if (error.responseJSON.message) {
                                    errorMessage = error.responseJSON.message;
                                } else if (error.responseJSON.errors && error.responseJSON.errors.length > 0) {
                                    errorMessage = error.responseJSON.errors.join(', ');
                                }
                            }
                            Swal.showValidationMessage(`Hata: ${errorMessage}`);
                                                        return false;

                        }
                    },
                    allowOutsideClick: () => !Swal.isLoading()
                });

                if (result.isConfirmed) {
                    await Swal.fire({
                        title: 'Başarılı!',
                        text: 'İzin talebi başarıyla silindi.',
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    myLeaveRequestsTable.ajax.reload(null, false);
                }

            } catch (error) {
                console.error('Silme hatası:', error);
            }
        }

    </script>

}