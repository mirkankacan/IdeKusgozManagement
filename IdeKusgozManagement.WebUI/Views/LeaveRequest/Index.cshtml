@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "İzin Yönetimi";
}

@section Styles {
    <link href="~/theme/assets/plugins/DataTables/datatables.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />
    <style>
        a {
            margin-left: 20px;
        }
    </style>
}

@Html.AntiForgeryToken()

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">
                    <i class="fas fa-calendar-check me-2"></i>
                    İzin Talepleri Tablosu
                </h5>

                <div class="table-responsive">
                    <table id="leaveRequestsTable" class="table table-striped table-hover display" style="width:100%">
                        <thead class="table-dark">
                            <tr>
                                <th>#</th>
                                <th>TALEP<br /> EDEN</th>
                                <th>BAŞLANGIÇ<br /> TARİHİ</th>
                                <th>BİTİŞ<br /> TARİHİ</th>
                                <th>NET<br/> SÜRE</th>
                                <th>SEBEP</th>
                                <th>DURUM</th>
                                <th>DÖKÜMAN</th>
                                <th>OLUŞTURMA<br /> TARİHİ</th>
                                <th>İŞLEMLER</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- DataTables will populate this -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Reject Modal -->
<div class="modal fade" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">İzin Talebi Reddetme Penceresi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="txtRejectLeaveRequestId" value="" disabled readonly/>
                <div class="mb-3">
                    <label for="txt-rejectReason" class="form-label">Reddetme Sebebi (İsteğe Bağlı)</label>
                    <textarea class="form-control" id="txtRejectReason" rows="3" placeholder="İzin talebini reddetme sebebinizi açıklayın..."></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary w-100" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-danger w-100" id="btnRejectLeaveRequest">
                    <i class="fas fa-times me-1"></i>Reddet
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/theme/assets/plugins/DataTables/datatables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <script>
        let leaveRequestsTable;

        $(document).ready(async function () {
            await initializeDataTable();
            $(document).on('click', '#btnRejectLeaveRequest', async function () {
                await rejectLeaveRequest();
            });
        });

        async function initializeDataTable() {
            leaveRequestsTable = $('#leaveRequestsTable').DataTable({
                "processing": true,
                "ajax": {
                    "url": "/izin/liste",
                    "type": "GET",
                    "dataSrc": function (json) {
                        if (json && json.isSuccess && json.data) {

                            return json.data;
                        }
                        return [];
                    },
                    "error": function (xhr, error, code) {
                        console.error('DataTables AJAX error:', error);
                        let errorMessage = 'Veriler yüklenirken hata oluştu';
                        try {
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage += ': ' + xhr.responseJSON.message;
                            } else if (xhr.responseText) {
                                errorMessage += ': ' + xhr.responseText;
                            }
                        } catch (e) {
                            errorMessage += ': ' + error;
                        }
                        toastr.error(errorMessage);
                    }
                },
                "columns": [
                    {
                        "data": null,
                        "width": "5%",
                        "orderable": false,
                        "className": "text-center",
                        "render": function (data, type, row, meta) {
                            return '';
                        }
                    },
                    {
                        "data": "createdByFullName",
                        "render": function (data) {
                            return data ? `<strong>${data}</strong>` : '';
                        }
                    },
                    {
                        "data": "startDate",
                        "render": function (data) {
                            return data ? new Date(data).toLocaleDateString('tr-TR') : '';
                        }
                    },
                    {
                        "data": "endDate",
                        "render": function (data) {
                            return data ? new Date(data).toLocaleDateString('tr-TR') : '';
                        }
                    },
                    {
                        "data": "duration",
                        "className": "text-center",
                        "render": function (data) {
                            return data || '';
                        }
                    },
                    {
                        "data": "reason",
                        "render": function (data) {
                            return data || '';
                        }
                    },
                    {
                        "data": "statusText",
                        "className": "text-center",
                        "render": function (data, type, row) {
                            if (row.status === 0) {
                                return `<span class="badge bg-warning">${data}</span>`;
                            } else if (row.status === 1) {
                                return `<span class="badge bg-success">${data}</span>`;
                            } else if (row.status === 2) {
                                return `<span class="badge bg-danger">${data}</span>`;
                            } else {
                                return `<span class="badge bg-secondary">${data}</span>`;
                            }
                        }
                    },
                     {
                        "data": "fileId",
                        "render": function (data, type, row) {
                               return data ? `<a href="/dosya/indir/${data}"
                                                           download
                                                           class="text-muted text-decoration-underline">
                                                            <i class="fas fa-file fa-lg"></i>
                                                        </a>` : '';
                        }
                    },
                    {
                        "data": "createdDate",
                        "render": function (data) {
        return data ? new Date(data).toLocaleString('tr-TR', {
                  year: 'numeric',
                  month: '2-digit',
                  day: '2-digit',
                  hour: '2-digit',
                  minute: '2-digit'
              }) : '';                        }
                    },
                    {
                        "data": null,
                        "width": "10%",
                        "orderable": false,
                        "className": "text-center",
                        "render": function (data, type, row) {
                             return row.status === 0 ? `
                                <div class="btn-group btn-group-sm" role="group">
                                    <button type="button" class="btn btn-outline-success btn-sm"
                                        onclick="approveLeaveRequest('${row.id}')" title="Onayla">
                                        <i class="fas fa-check"></i>
                                    </button>
                                     <button type="button" class="btn btn-outline-danger btn-sm"
                  onclick="openRejectModal('${row.id}')"  title="Reddet">
                    <i class="fas fa-times"></i>
                </button>
                                    <button type="button" class="btn btn-outline-danger btn-sm"
                                        onclick="deleteLeaveRequest('${row.id}')" title="Sil">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            ` : "";

                        }
                    }
                ],
                "language": {
                    url: 'https://cdn.datatables.net/plug-ins/2.3.2/i18n/tr.json'
                },
                "lengthMenu": [[10, 25, 50, 100], [10, 25, 50, 100]],
                "pageLength": 10,
                "responsive": true,
                "searchDelay": 300,
                "order": [[7, "desc"]], // Order by created date desc
                "drawCallback": function () {
                    var api = this.api();
                    var pageInfo = api.page.info();

                    api.column(0, { page: 'current' }).nodes().each(function (cell, i) {
                        cell.innerHTML = pageInfo.start + i + 1;
                    });
                    $('[title]').tooltip();
                }
            });
        }

        async function approveLeaveRequest(leaveRequestId) {
            try {
                const result = await Swal.fire({
                    title: 'İzin Talebini Onayla',
                    text: 'Bu izin talebini onaylamak istediğinizden emin misiniz?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: '<i class="fas fa-check"></i> Evet, Onayla',
                    cancelButtonText: '<i class="fas fa-times"></i> İptal',
                    showLoaderOnConfirm: true,
                    preConfirm: async () => {
                        try {
                            const response = await $.ajax({
                                url: `/izin/${leaveRequestId}/onayla`,
                                type: 'PUT',
                                contentType: 'application/json',
                                headers: {
                                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                                }
                            });
                            return response;
                        } catch (error) {
                            let errorMessage = 'Onaylama başarısız';
                            if (error.responseJSON) {
                                if (error.responseJSON.message) {
                                    errorMessage = error.responseJSON.message;
                                } else if (error.responseJSON.errors && error.responseJSON.errors.length > 0) {
                                    errorMessage = error.responseJSON.errors.join(', ');
                                }
                            }
                            Swal.showValidationMessage(`Hata: ${errorMessage}`);
                            return false;
                        }
                    },
                    allowOutsideClick: () => !Swal.isLoading()
                });

                if (result.isConfirmed) {
                    await Swal.fire({
                        title: 'Başarılı!',
                        text: 'İzin talebi başarıyla onaylandı.',
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    leaveRequestsTable.ajax.reload(null, false);
                }

            } catch (error) {
                console.error('Onaylama hatası:', error);
            }
        }
                function openRejectModal(id) {
            $('#txtRejectLeaveRequestId').val(id);
            $('#txtRejectReason').val('');
            $('#rejectModal').modal('show');
        }

        async function rejectLeaveRequest() {
            try {
                        const leaveRequestId = $('#txtRejectLeaveRequestId').val();

                if (!leaveRequestId) {
                    toastr.error('İzin talebi ID\'si bulunamadı');
                    return;
                }

                const rejectReason = $('#txtRejectReason').val().trim();

                const submitBtn = $('#btnRejectLeaveRequest');
                submitBtn.prop('disabled', true)
                    .html('<i class="fas fa-spinner fa-spin me-2"></i>Reddediliyor...');

                const response = await $.ajax({
                    url: `/izin/${leaveRequestId}/reddet${rejectReason ? `?rejectReason=${encodeURIComponent(rejectReason)}` : null}`,
                    type: 'PUT',
                    contentType: 'application/json',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    }
                });

                toastr.success('İzin talebi başarıyla reddedildi.');
                $('#rejectModal').modal('hide');
                leaveRequestsTable.ajax.reload(null, false);

            } catch (error) {
                console.error('Reddetme hatası:', error);
                let errorMessage = 'İzin talebi reddedilirken hata oluştu';

                if (error.responseJSON) {
                    if (error.responseJSON.message) {
                        errorMessage = error.responseJSON.message;
                    } else if (error.responseJSON.errors && error.responseJSON.errors.length > 0) {
                        errorMessage = error.responseJSON.errors.join(', ');
                    }
                } else if (error.message) {
                    errorMessage = error.message;
                }

                toastr.error(errorMessage);
            } finally {
                const submitBtn = $('#btnRejectLeaveRequest');
                submitBtn.prop('disabled', false).html('<i class="fas fa-times me-1"></i>Reddet');
            }
        }

        async function deleteLeaveRequest(leaveRequestId) {
            try {
                const result = await Swal.fire({
                    title: 'İzin Talebini Sil',
                    text: 'Bu izin talebini silmek istediğinizden emin misiniz? Bu işlem geri alınamaz!',
                    icon: 'error',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: '<i class="fas fa-trash"></i> Evet, Sil',
                    cancelButtonText: '<i class="fas fa-times"></i> İptal',
                    showLoaderOnConfirm: true,
                    preConfirm: async () => {
                        try {
                            const response = await $.ajax({
                                url: `/izin/${leaveRequestId}`,
                                type: 'DELETE',
                                contentType: 'application/json',
                                headers: {
                                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                                }
                            });
                            return response;
                        } catch (error) {
                            let errorMessage = 'Silme başarısız';
                            if (error.responseJSON) {
                                if (error.responseJSON.message) {
                                    errorMessage = error.responseJSON.message;
                                } else if (error.responseJSON.errors && error.responseJSON.errors.length > 0) {
                                    errorMessage = error.responseJSON.errors.join(', ');
                                }
                            }
                            Swal.showValidationMessage(`Hata: ${errorMessage}`);
                            return false;
                        }
                    },
                    allowOutsideClick: () => !Swal.isLoading()
                });

                if (result.isConfirmed) {
                    await Swal.fire({
                        title: 'Başarılı!',
                        text: 'İzin talebi başarıyla silindi.',
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    leaveRequestsTable.ajax.reload(null, false);
                }

            } catch (error) {
                console.error('Silme hatası:', error);
            }
        }

    </script>
}