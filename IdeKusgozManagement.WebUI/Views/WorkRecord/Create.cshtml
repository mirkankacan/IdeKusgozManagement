@{
    ViewData["Title"] = "Puantaj Ekle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.rtl.min.css" />

    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-datetimepicker/2.7.1/css/bootstrap-material-datetimepicker.min.css"
          rel="stylesheet">

    <style>
        .time-input {
            text-align: center;
            padding: 0.25rem 0.5rem;
            cursor: pointer;
            font-size: 0.85rem;
        }

        .fa-clock {
            cursor: pointer;
        }

            .fa-clock:hover {
                color: #007bff;
            }

        input[type="checkbox"] {
            width: 16px;
            height: 16px;
        }

        .table th {
            vertical-align: middle;
            text-align: center;
            font-size: 0.7rem;
            padding: 0.25rem 0.1rem !important;
            white-space: nowrap;
        }

        .table td {
            vertical-align: middle;
            text-align: center;
            padding: 0.25rem 0.1rem !important;
            font-size: 0.85rem;
        }

        .project-input {
            font-size: 0.85rem;
        }

        .table .select2-container--bootstrap-5 .select2-dropdown .select2-search .select2-search__field {
            font-size: 0.85rem !important;
        }

        .table .select2-container--bootstrap-5 .select2-dropdown .select2-results__options .select2-results__option {
            font-size: 0.85rem
        }

        .table .select2-selection__rendered {
            font-size: 0.85rem;
        }

        .table .select2-container--bootstrap-5 .select2-selection--single .select2-selection__rendered .select2-selection__placeholder {
            font-size: 0.85rem;
        }

        /* Masraf Modal Stilleri */
        .expense-modal-btn {
            font-size: 0.85rem;
        }

        .expense-count {
            font-weight: bold;
        }

        .list-group-item {
            border: 1px solid #dee2e6;
            margin-bottom: 0.25rem;
        }

        .remove-expense-btn {
            min-width: 35px;
            height: 35px;
        }

        .meal-section {
            display: flex;
            justify-content: center;
            gap: 0.25rem;
        }

        .meal-item {
            text-align: center;
        }


        .spinner-border {
            width: 3rem;
            height: 3rem;
        }

        .fade-transition {
            transition: opacity 0.3s ease-in-out;
        }

        /* Loading sırasında tablo başlıklarını gizle */
        .table-loading #workRecordsTable {
            display: none !important;
        }
    </style>
}

@Html.AntiForgeryToken()

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">
                    <i class="fas fa-hourglass-start me-2"></i>
                    Puantaj Ekleme Tablosu
                </h5>

                <!-- Yıl ve Ay Seçimi -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <label for="year-select" class="form-label">Yıl</label>
                        <select id="year-select" class="form-select">
                            @for (int year = DateTime.Now.Year - 2; year <= DateTime.Now.Year; year++)
                            {
                                if (year == DateTime.Now.Year)
                                {
                                    <option value="@year" selected>@year</option>
                                }
                                else
                                {
                                    <option value="@year">@year</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="month-select" class="form-label">Ay</label>
                        <select id="month-select" class="form-select">
                            <option value="1">Ocak</option>
                            <option value="2">Şubat</option>
                            <option value="3">Mart</option>
                            <option value="4">Nisan</option>
                            <option value="5">Mayıs</option>
                            <option value="6">Haziran</option>
                            <option value="7">Temmuz</option>
                            <option value="8">Ağustos</option>
                            <option value="9">Eylül</option>
                            <option value="10">Ekim</option>
                            <option value="11">Kasım</option>
                            <option value="12">Aralık</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" class="btn btn-info d-block w-100 btnSaveWorkRecords">
                            <i class="fas fa-save me-2"></i>Kaydet
                        </button>
                    </div>
                </div>

                <!-- Dinamik Tablo -->
                <div id="dynamicTableContainer">
                    <div id="tableLoadingSpinner" class="text-center py-5" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Yükleniyor...</span>
                        </div>
                        <div class="mt-3">
                            <h6 class="text-muted">Tablo oluşturuluyor...</h6>
                            <small class="text-muted">Lütfen bekleyiniz</small>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table id="workRecordsTable" class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>TARİH</th>
                                    <th>HAFTA<br /> TATİLİ</th>
                                    <th style="width: 100px;">BAŞLAMA<br /> SAATİ</th>
                                    <th style="width: 100px;">BIRAKMA<br /> SAATİ</th>
                                    <th>PROJE</th>
                                    <th style="width: 150px;">ÇALIŞILAN<br /> EKİPMAN</th>
                                    <th style="width: 160px;">ÇALIŞILAN<br /> İL</th>
                                    <th style="width: 150px;">ÇALIŞILAN<br /> İLÇE</th>
                                    <th>MASRAF</th>
                                    <th>YEMEK</th>
                                </tr>
                            </thead>
                            <tbody id="workRecordsTableBody">
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-12">
                    <label class="form-label">&nbsp;</label>
                    <button type="button" class="btn btn-info d-block w-100 btnSaveWorkRecords">
                        <i class="fas fa-save me-2"></i>Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="expenseModal" tabindex="-1" aria-labelledby="expenseModalLabel" aria-hidden="true"
     data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="expenseModalLabel">
                    <i class="fas fa-receipt me-2"></i>
                    Masraf Bilgileri - <span id="modalDateInfo"></span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form  id="expenseForm">
                <div class="modal-body">
                    <!-- Mevcut Masraflar Listesi -->
                    <div id="currentExpensesList" class="mb-3" style="display: none;">
                        <h6 class="text-muted">Mevcut Masraflar:</h6>
                        <div id="expenseItemsList" class="list-group mb-3">
                            <!-- Masraf listesi buraya gelecek -->
                        </div>
                    </div>

                    <!-- Yeni Masraf Ekleme Formu -->
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label for="ddExpense" class="form-label">Masraf Türü</label>
                            <select class="form-select ddExpense" id="ddExpense" >
                                <option value="">Masraf türü seçin</option>
                                <option value="yol">Yol Masrafı</option>
                                <option value="yemek">Yemek Masrafı</option>
                                <option value="konaklama">Konaklama Masrafı</option>
                                <option value="yakit">Yakıt Masrafı</option>
                                <option value="otopark">Otopark Masrafı</option>
                                <option value="diger">Diğer Masraf</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="txtAmount" class="form-label">Tutar (₺)</label>
                            <input type="number" class="form-control" id="txtAmount" step="0.01" min="0">
                        </div>
                        <div class="col-md-12">
                            <label for="txtDescription" class="form-label">Açıklama</label>
                            <textarea class="form-control" id="txtDescription" placeholder="Opsiyonel"></textarea>
                        </div>
                        <div class="col-md-12">
                            <label for="fileReceiptImage" class="form-label">Fatura Fotoğrafı</label>
                            <input type="file" class="form-control" id="fileReceiptImage" accept="image/*,.pdf">
                        </div>
                    </div>

                    <!-- Toplam Masraf -->
                    <div class="mt-3 p-2 bg-light rounded" id="totalExpenseSection" style="display: none;">
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="fw-bold">Toplam Masraf:</span>
                            <span class="fw-bold text-primary" id="totalExpenseAmount">0.00 ₺</span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary w-100" data-bs-dismiss="modal">Kapat</button>
                    <button class="btn btn-primary w-100" type="submit" id="btnSaveExpenses">
                        <i class="fas fa-plus me-1"></i>Masraf Ekle
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/locale/tr.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-datetimepicker/2.7.1/js/bootstrap-material-datetimepicker.min.js"></script>
    <script src="~/js/turkey-locations.js"></script>

    <script>
        let workRecordsTable;
        let currentYear;
        let currentMonth;

        // Masraf verilerini tutacak obje
        let expenseData = {};
        let currentEditingDay = null;

        $(document).ready(async function () {
            $('body').addClass('sidebar-hidden');

            // Sayfa yüklendiğinde mevcut yıl ve ayı seç
            currentYear = new Date().getFullYear();
            currentMonth = new Date().getMonth() + 1;

            $('#year-select').val(currentYear);
            $('#month-select').val(currentMonth);

            // Event listeners
            $('.btnSaveWorkRecords').on('click', saveWorkRecords);

            // Masraf modal setup
            setupExpenseModal();

            // Sayfa yüklendiğinde otomatik olarak tabloyu oluştur
            await generateDynamicTable();
        });

        // Masraf Modal Setup
        function setupExpenseModal() {
            // Masraf modal'ı açıldığında
            $('#expenseModal').on('show.bs.modal', function (event) {
                const button = $(event.relatedTarget);
                currentEditingDay = button.data('day');

                if (currentEditingDay) {
                    const date = new Date(currentYear, currentMonth - 1, currentEditingDay);
                    const dateStr = `${currentEditingDay.toString().padStart(2, '0')}.${currentMonth.toString().padStart(2, '0')}.${currentYear} ${getDayOfWeekTurkish(date.getDay())}`;
                    $('#modalDateInfo').text(dateStr);

                    loadExpensesForDay(currentEditingDay);
                    clearExpenseForm();
                }
            });

            // Form submit işlemi
            $('#expenseForm').on('submit', function(e) {
                e.preventDefault();

                if (this.checkValidity()) {
                    addExpenseToDay();
                }

                $(this).addClass('was-validated');
            });

            // Masraf silme butonları
            $(document).on('click', '.remove-expense-btn', function() {
                const expenseIndex = $(this).data('index');
                removeExpenseFromDay(expenseIndex);
            });

            // Masraf türü Select2 initialize
            $('#ddExpense').select2({
                placeholder: 'Masraf türü seçin',
                theme: 'bootstrap-5',
                dropdownParent: $('#expenseModal'),
                width: '100%'
            });
        }

        // Belirli bir gün için masrafları yükle ve göster
        function loadExpensesForDay(day) {
            if (!expenseData[day]) {
                expenseData[day] = [];
            }

            displayCurrentExpenses(day);
            updateTotalExpense(day);
        }

        // Mevcut masrafları listele
        function displayCurrentExpenses(day) {
            const expenses = expenseData[day] || [];
            const expensesList = $('#expenseItemsList');
            const currentExpensesSection = $('#currentExpensesList');

            expensesList.empty();

            if (expenses.length > 0) {
                currentExpensesSection.show();

                expenses.forEach((expense, index) => {
                    const expenseTypeText = getExpenseTypeText(expense.type);
                    const expenseItem = `
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="mb-1">${expenseTypeText}</h6>
                                <p class="mb-1"><strong>${expense.amount.toFixed(2)} ₺</strong></p>
                                ${expense.description ? `<small class="text-muted">${expense.description}</small>` : ''}
                            </div>
                            <button type="button" class="btn btn-sm btn-outline-danger remove-expense-btn"
                                    data-index="${index}" title="Masrafı Sil">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    `;
                    expensesList.append(expenseItem);
                });
            } else {
                currentExpensesSection.hide();
            }
        }

        // Masraf türü metnini al
        function getExpenseTypeText(type) {
            const types = {
                'yol': 'Yol Masrafı',
                'yemek': 'Yemek Masrafı',
                'konaklama': 'Konaklama Masrafı',
                'yakit': 'Yakıt Masrafı',
                'otopark': 'Otopark Masrafı',
                'diger': 'Diğer Masraf'
            };
            return types[type] || type;
        }

        // Yeni masraf ekle
        function addExpenseToDay() {
            const expenseType = $('#ddExpense').val();
            const amount = parseFloat($('#txtAmount').val());
            const description = $('#txtDescription').val();
            const receiptFile = $('#fileReceiptImage')[0].files[0];
            if(expenseType == null || expenseType == undefined || isNaN(amount) || amount==null ){
                toastr.warning("Masraf türünü ya da tutarı kontrol ediniz")
                return;
            }
            if (!expenseData[currentEditingDay]) {
                expenseData[currentEditingDay] = [];
            }

            const newExpense = {
                type: expenseType,
                amount: amount,
                description: description,
                receiptFile: receiptFile,
                receiptName: receiptFile ? receiptFile.name : null,
            };

            expenseData[currentEditingDay].push(newExpense);

            // Listeyi güncelle
            displayCurrentExpenses(currentEditingDay);
            updateTotalExpense(currentEditingDay);
            updateExpenseButton(currentEditingDay);

            // Formu temizle
            clearExpenseForm();

            toastr.success('Masraf eklendi!', 'Başarılı!');
        }

        // Masraf sil
        function removeExpenseFromDay(index) {
            if (expenseData[currentEditingDay] && expenseData[currentEditingDay][index]) {
                expenseData[currentEditingDay].splice(index, 1);

                displayCurrentExpenses(currentEditingDay);
                updateTotalExpense(currentEditingDay);
                updateExpenseButton(currentEditingDay);

                toastr.info('Masraf silindi!', 'Bilgi');
            }
        }

        // Toplam masrafı güncelle
        function updateTotalExpense(day) {
            const expenses = expenseData[day] || [];
            const total = expenses.reduce((sum, expense) => sum + expense.amount, 0);

            $('#totalExpenseAmount').text(total.toFixed(2) + ' ₺');

            if (total > 0) {
                $('#totalExpenseSection').show();
            } else {
                $('#totalExpenseSection').hide();
            }
        }

        // Masraf butonunu güncelle
        function updateExpenseButton(day) {
            const expenses = expenseData[day] || [];
            const button = $(`.expense-modal-btn[data-day="${day}"]`);
            const count = expenses.length;

            button.find('.expense-count').text(count);

            if (count > 0) {
                button.removeClass('btn-outline-primary').addClass('btn-success');
            } else {
                button.removeClass('btn-success').addClass('btn-outline-primary');
            }
        }

        // Formu temizle
        function clearExpenseForm() {
            $('#expenseForm')[0].reset();
            $('#expenseForm').removeClass('was-validated');
            $('#ddExpense').val('').trigger('change');
        }

        function initializeTimepickers() {
            // Moment.js locale'ını Türkçe yap
            moment.locale('tr');

            // Başlama saati için bootstrap material datetimepicker
            $('.start-time').each(function () {
                $(this).bootstrapMaterialDatePicker({
                    format: 'HH:mm',
                    shortTime: false,
                    date: false,
                    time: true,
                    monthPicker: false,
                    yearPicker: false,
                    dayPicker: false,
                    hourPicker: true,
                    minutePicker: true,
                    minuteStep: 15,
                    clearButton: true,
                    nowButton: true,
                    switchOnClick: true,
                    ampm: false,
                    okText: 'Tamam',
                    cancelText: 'İptal',
                    clearText: 'Temizle',
                    nowText: 'Şimdi',
                    lang: 'tr',
                    currentDate: moment().startOf('day').add(8, 'hours'),
                    showTodayBtn: false,
                    showClear: true,
                    showClose: true
                }).on('change', function () {
                    validateTimeInputs($(this));
                });

                $(this).closest('.input-group').find('.fa-clock').parent().on('click', function () {
                    $(this).closest('.input-group').find('.start-time').focus();
                });
            });

            // Bırakma saati için bootstrap material datetimepicker
            $('.end-time').each(function () {
                $(this).bootstrapMaterialDatePicker({
                    format: 'HH:mm',
                    shortTime: false,
                    date: false,
                    time: true,
                    monthPicker: false,
                    yearPicker: false,
                    dayPicker: false,
                    hourPicker: true,
                    minutePicker: true,
                    minuteStep: 15,
                    clearButton: true,
                    nowButton: true,
                    switchOnClick: true,
                    ampm: false,
                    okText: 'Tamam',
                    cancelText: 'İptal',
                    clearText: 'Temizle',
                    nowText: 'Şimdi',
                    lang: 'tr',
                    currentDate: moment().startOf('day').add(17, 'hours'),
                    showTodayBtn: false,
                    showClear: true,
                    showClose: true
                }).on('change', function () {
                    validateTimeInputs($(this));
                });

                $(this).closest('.input-group').find('.fa-clock').parent().on('click', function () {
                    $(this).closest('.input-group').find('.end-time').focus();
                });
            });
        }

        function validateTimeInputs(changedInput) {
            const row = changedInput.closest('tr');
            const startTimeInput = row.find('.start-time');
            const endTimeInput = row.find('.end-time');

            const startTime = startTimeInput.val();
            const endTime = endTimeInput.val();

            if (startTime && endTime) {
                const startMoment = moment(startTime, 'HH:mm');
                const endMoment = moment(endTime, 'HH:mm');

                if (endMoment.isSameOrBefore(startMoment)) {
                    toastr.warning('Bırakma saati başlama saatinden erken olamaz!', 'Uyarı!');

                    if (changedInput.hasClass('end-time')) {
                        const newEndTime = startMoment.add(1, 'hour').format('HH:mm');
                        endTimeInput.val(newEndTime);
                    }
                    else if (changedInput.hasClass('start-time')) {
                        const newEndTime = startMoment.add(1, 'hour').format('HH:mm');
                        endTimeInput.val(newEndTime);
                    }
                }
            }
        }
          function showTableLoading() {
            $('#dynamicTableContainer').addClass('table-loading');
            $('#tableLoadingSpinner').show();
            $('#tableContent').hide();
        }

        // Loading spinner'ı gizle
        function hideTableLoading() {
            $('#dynamicTableContainer').removeClass('table-loading');
            $('#tableLoadingSpinner').hide();
            $('#tableContent').show();
        }
        async function generateDynamicTable() {
              // Loading spinner'ı göster
            showTableLoading();

            const year = parseInt($('#year-select').val());
            const month = parseInt($('#month-select').val());

            currentYear = year;
            currentMonth = month;

            // Ayın kaç gün çektiğini hesapla
            const daysInMonth = new Date(year, month, 0).getDate();

            // Tablo body'sini temizle
            $('#workRecordsTableBody').empty();

            // Masraf verilerini temizle (yeni ay/yıl seçildiğinde)
            expenseData = {};

            await new Promise(resolve => setTimeout(resolve, 300));

            // Her gün için satır oluştur
            for (let day = 1; day <= daysInMonth; day++) {
                const date = new Date(year, month - 1, day);
                const dayOfWeek = getDayOfWeekTurkish(date.getDay());
                const formattedDate = `${day.toString().padStart(2, '0')}.${month.toString().padStart(2, '0')}.${year} ${dayOfWeek}`;
                const row = `
                    <tr data-day="${day}">
                        <td class="date-cell">
                            <span class="badge bg-info">${formattedDate}</span>
                        </td>
                        <td>
                            <div class="form-check d-flex justify-content-center">
                                <input class="form-check-input weekend-checkbox" type="checkbox" id="weekend_${day}">
                            </div>
                        </td>
                        <td>
                            <div class="input-group">
                                <input type="text" class="form-control time-input start-time" value="08:00" data-day="${day}" placeholder="08:00" readonly>
                                <span class="input-group-text"><i class="fas fa-clock"></i></span>
                            </div>
                        </td>
                        <td>
                            <div class="input-group">
                                <input type="text" class="form-control time-input end-time" value="17:00" data-day="${day}" placeholder="17:00" readonly>
                                <span class="input-group-text"><i class="fas fa-clock"></i></span>
                            </div>
                        </td>
                        <td>
                            <input type="text" class="form-control project-input" placeholder="Proje adı" data-day="${day}">
                        </td>
                        <td>
                            <select class="form-select form-select-sm equipment-select" data-day="${day}">
                                <option value="">Ekipman seçin</option>
                                <option value="excavator">Ekskavatör</option>
                                <option value="bulldozer">Buldozer</option>
                                <option value="loader">Yükleyici</option>
                                <option value="truck">Kamyon</option>
                                <option value="crane">Vinç</option>
                                <option value="other">Diğer</option>
                            </select>
                        </td>
                        <td>
                            <select class="form-select form-select-sm province-select" data-day="${day}">
                            </select>
                        </td>
                        <td>
                            <select class="form-select form-select-sm district-select" data-day="${day}">
                            </select>
                        </td>
                        <td>
                            <button type="button" class="btn btn-primary expense-modal-btn w-100"
                                    data-day="${day}" data-bs-toggle="modal" data-bs-target="#expenseModal">
                                <i class="fas fa-receipt me-1"></i>
                                <span class="expense-count" data-day="${day}">0</span> Masraf
                            </button>
                        </td>
                        <td>
                            <div class="meal-section">
                                <div class="meal-item">
                                    <div class="form-check">
                                        <input class="form-check-input meal-checkbox" type="checkbox" id="s_${day}" data-meal="S" data-day="${day}">
                                        <label class="form-check-label" for="s_${day}">S</label>
                                    </div>
                                </div>
                                <div class="meal-item">
                                    <div class="form-check">
                                        <input class="form-check-input meal-checkbox" type="checkbox" id="o_${day}" data-meal="O" data-day="${day}">
                                        <label class="form-check-label" for="o_${day}">Ö</label>
                                    </div>
                                </div>
                                <div class="meal-item">
                                    <div class="form-check">
                                        <input class="form-check-input meal-checkbox" type="checkbox" id="a_${day}" data-meal="A" data-day="${day}">
                                        <label class="form-check-label" for="a_${day}">A</label>
                                    </div>
                                </div>
                                <div class="meal-item">
                                    <div class="form-check">
                                        <input class="form-check-input meal-checkbox" type="checkbox" id="g_${day}" data-meal="G" data-day="${day}">
                                        <label class="form-check-label" for="g_${day}">G</label>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                `;

                $('#workRecordsTableBody').append(row);
            }

            // İl ve ilçe select'lerini doldur
            await populateAllProvinces();

            // İl değiştiğinde ilçeleri güncelle
            setupProvinceDistrictChangeHandlers();

            initializeSelect2();
            initializeTimepickers();

            hideTableLoading();
        }

        // Tüm il select'lerini doldur
        async function populateAllProvinces() {
            $('.province-select').each(function () {
                populateProvinces($(this));
            });
        }

        // İl değiştiğinde ilçeleri güncelle
        function setupProvinceDistrictChangeHandlers() {
            $(document).on('change', '.province-select', function () {
                const row = $(this).closest('tr');
                const districtSelect = row.find('.district-select');
                populateDistricts($(this), districtSelect);
            });
        }

        function initializeSelect2() {
            $('.equipment-select').select2({
                placeholder: 'Ekipman seçin',
                theme: 'bootstrap-5',
                allowClear: true,
                width: '100%'
            });

            $('.province-select').select2({
                placeholder: 'İl seçin',
                theme: 'bootstrap-5',
                allowClear: true,
                width: '100%'
            });

            $('.district-select').select2({
                placeholder: 'İlçe seçin',
                theme: 'bootstrap-5',
                allowClear: true,
                width: '100%'
            });
        }

        function getDayOfWeekTurkish(day) {
            const days = ['Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi'];
            return days[day];
        }

        async function saveWorkRecords() {
            const workRecords = [];

            $('#workRecordsTableBody tr').each(function () {
                const day = $(this).data('day');
                const isWeekend = $(this).find('.weekend-checkbox').is(':checked');
                const startTime = $(this).find('.start-time').val();
                const endTime = $(this).find('.end-time').val();
                const project = $(this).find('.project-input').val();
                const equipment = $(this).find('.equipment-select').val();
                const province = $(this).find('.province-select').val();
                const district = $(this).find('.district-select').val();

                // Masraf bilgilerini al
                const dayExpenses = expenseData[day] || [];
                const expenses = dayExpenses.map(exp => ({
                    expense: exp.type,
                    description: exp.description || null,
                    amount: exp.amount,
                    receiptImageUrl: null // Fiş yükleme sonrası güncellenecek
                }));

                const hasBreakfast = $(this).find('.meal-checkbox[data-meal="S"]').is(':checked');
                const hasLunch = $(this).find('.meal-checkbox[data-meal="O"]').is(':checked');
                const hasDinner = $(this).find('.meal-checkbox[data-meal="A"]').is(':checked');
                const hasNightMeal = $(this).find('.meal-checkbox[data-meal="G"]').is(':checked');
                    const formattedDate = `${currentYear}-${String(currentMonth).padStart(2, '0')}-${String(day).padStart(2, '0')}`;

                workRecords.push({
                    Date: formattedDate,
                    IsWeekend: isWeekend,
                    StartTime: startTime,
                    EndTime: endTime,
                    Project: project,
                    Equipment: equipment,
                    Province: province,
                    District: district,
                    HasBreakfast: hasBreakfast,
                    HasLunch: hasLunch,
                    HasDinner: hasDinner,
                    HasNightMeal: hasNightMeal,
                    Expenses: expenses
                });
            });
            try {
                const response = await $.ajax({
                    url: '/puantaj/toplu-ekle',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(workRecords),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    }
                });

                if (response.isSuccess) {
                    toastr.success(response.message, 'Başarılı!');
                   
                } else {
                    toastr.error(response.message, 'Hata!');
                }
            } catch (error) {
                console.error('Hata:', error);
                toastr.error('Puantaj kaydedilirken bir hata oluştu.', 'Hata!');
            }
        }

        // Yıl ve ay değiştiğinde tabloyu güncelle
        $('#year-select, #month-select').on('change', function () {
            generateDynamicTable();
        });
    </script>
}