@{
    ViewData["Title"] = "Puantaj Ekle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" />
    <link rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />
    <link rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.rtl.min.css" />

    <style>
        .time-input {
            text-align: center;
            padding: 0.25rem 0.5rem;
            cursor: pointer;
            font-size: 0.85rem;
        }

        .fa-clock {
            cursor: pointer;
        }

        .fa-clock:hover {
            color: #007bff;
        }

        input[type="checkbox"] {
            width: 16px;
            height: 16px;
        }

        .table th {
            vertical-align: middle;
            text-align: center;
            font-size: 0.7rem;
            padding: 0.25rem 0.1rem !important;
            white-space: nowrap;
        }

        .table td {
            vertical-align: middle;
            text-align: center;
            padding: 0.25rem 0.01rem !important;
            font-size: 0.85rem;
        }

        .project-input {
            font-size: 0.85rem;
        }

        .table .select2-container--bootstrap-5 .select2-dropdown .select2-search .select2-search__field {
            font-size: 0.85rem !important;
        }

        .table .select2-container--bootstrap-5 .select2-dropdown .select2-results__options .select2-results__option {
            font-size: 0.85rem
        }

        .table .select2-selection__rendered {
            font-size: 0.85rem;
        }

        .additional-time-btn {
            font-size: 0.65rem;
            padding: 0.125rem 0.25rem;
            width: 100%;
        }

        .date-cell .additional-time-btn {
            width: 100%;
            margin-top: 2px;
        }

        .additional-time-section {
            margin-top: 2px;
        }

        .additional-time-section .form-control-sm {
            font-size: 0.7rem;
            padding: 0.1rem 0.2rem;
            height: calc(1.5em + 0.2rem);
            text-align: center;
        }

        .additional-time-section .input-group-text-sm {
            font-size: 0.7rem;
            padding: 0.1rem 0.2rem;
            height: calc(1.5em + 0.2rem);
        }

        .additional-time-section .input-group {
            margin-bottom: 0;
        }

        .table .select2-container--bootstrap-5 .select2-selection--single .select2-selection__rendered .select2-selection__placeholder {
            font-size: 0.85rem;
        }

        /* Masraf Modal Stilleri */
        .expense-modal-btn {
            font-size: 0.85rem;
        }

        .expense-count {
            font-weight: bold;
        }

        .list-group-item {
            border: 1px solid #dee2e6;
            margin-bottom: 0.25rem;
        }

        .remove-expense-btn {
            min-width: 35px;
            height: 35px;
        }

        .meal-section {
            display: flex;
            justify-content: center;
            gap: 0.25rem;
        }

        .meal-item {
            text-align: center;
        }

        .spinner-border {
            width: 3rem;
            height: 3rem;
        }

        /* Loading sırasında tablo başlıklarını gizle */
        .table-loading #workRecordsTable {
            display: none !important;
        }

        .modal-dialog-scrollable #expenseForm {
            max-height: calc(100vh - 200px);
            /* header + footer yüksekliğini çıkar */
            overflow-y: auto;
        }
    </style>
}

@Html.AntiForgeryToken()

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">
                    <i class="fas fa-calendar-day me-2"></i>
                    Puantaj Oluşturma Sayfası
                </h5>

                <!-- Info Alert -->
                <div id="infoAlert" class="alert alert-info d-none" role="alert">
                    <i class="fas fa-info-circle me-2"></i>
                    <span id="infoMessage"></span>
                </div>

                <!-- Yıl ve Ay Seçimi -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <label for="year-select" class="form-label">Yıl</label>
                        <select id="year-select" class="form-select">
                            @for (int year = DateTime.Now.Year - 2; year <= DateTime.Now.Year; year++)
                            {
                                if (year == DateTime.Now.Year)
                                {
                                    <option value="@year" selected>@year</option>
                                }
                                else
                                {
                                    <option value="@year">@year</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="month-select" class="form-label">Ay</label>
                        <select id="month-select" class="form-select">
                            <option value="1">Ocak</option>
                            <option value="2">Şubat</option>
                            <option value="3">Mart</option>
                            <option value="4">Nisan</option>
                            <option value="5">Mayıs</option>
                            <option value="6">Haziran</option>
                            <option value="7">Temmuz</option>
                            <option value="8">Ağustos</option>
                            <option value="9">Eylül</option>
                            <option value="10">Ekim</option>
                            <option value="11">Kasım</option>
                            <option value="12">Aralık</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" class="btn btn-info d-block w-100 btnSaveWorkRecords">
                            <i class="fas fa-save me-2"></i>Kaydet
                        </button>
                    </div>
                </div>

                <!-- Dinamik Tablo -->
                <div id="dynamicTableContainer">
                    <div id="tableLoadingSpinner" class="text-center py-5" style="display: none;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Yükleniyor...</span>
                        </div>
                        <div class="mt-3">
                            <h6 class="text-muted">Tablo oluşturuluyor...</h6>
                            <small class="text-muted">Lütfen bekleyiniz</small>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table id="workRecordsTable" class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>TARİH</th>
                                    <th style="width: 100px;">TATİL</th>
                                    <th style="width: 100px;">BAŞLAMA<br /> SAATİ</th>
                                    <th style="width: 100px;">BIRAKMA<br /> SAATİ</th>
                                    <th style="width: 150px;">PROJE</th>
                                    <th style="width: 150px;">ÇALIŞILAN<br /> EKİPMAN</th>
                                    <th style="width: 160px;">ÇALIŞILAN<br /> İL</th>
                                    <th style="width: 150px;">ÇALIŞILAN<br /> İLÇE</th>
                                    <th>MASRAF</th>
                                    <th>YEMEK</th>
                                    <th>YOL</th>
                                    <th>DURUM</th>
                                </tr>
                            </thead>
                            <tbody id="workRecordsTableBody">
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-md-12">
                    <label class="form-label">&nbsp;</label>
                    <button type="button" class="btn btn-info d-block w-100 btnSaveWorkRecords">
                        <i class="fas fa-save me-2"></i>Kaydet
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="expenseModal" tabindex="-1" aria-labelledby="expenseModalLabel" aria-hidden="true"
    data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="expenseModalLabel">
                    <i class="fas fa-receipt me-2"></i>
                    Masraf Bilgileri - <span id="modalDateInfo"></span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="expenseForm">
                <div class="modal-body">
                    <!-- Mevcut Masraflar Listesi -->
                    <div id="currentExpensesList" class="mb-3" style="display: none;">
                        <h6 class="text-muted">Mevcut Masraflar:</h6>
                        <div id="expenseItemsList" class="list-group mb-3">
                            <!-- Masraf listesi buraya gelecek -->
                        </div>
                    </div>

                    <!-- Yeni Masraf Ekleme Formu -->
                    <div id="addExpenseForm" class="row g-3">
                        <div class="col-md-6">
                            <label for="expense-select" class="form-label">Masraf Türü</label>
                            <select class="form-select expense-select" id="expense-select">
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="txtAmount" class="form-label">Tutar (₺)</label>
                            <input type="number" class="form-control" id="txtAmount" step="0.01" min="0">
                        </div>
                        <div class="col-md-12">
                            <label for="txtDescription" class="form-label">Açıklama</label>
                            <textarea class="form-control" id="txtDescription" placeholder="Opsiyonel"></textarea>
                        </div>
                        <div class="col-md-12">
                            <label for="fileReceipt" class="form-label">Fatura</label>
                            <input type="file" class="form-control" id="fileReceipt" accept="image/*,.pdf">
                        </div>
                    </div>

                    <!-- Toplam Masraf -->
                    <div class="mt-3 p-2 bg-light rounded" id="totalExpenseSection" style="display: none;">
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="fw-bold">Toplam Masraf:</span>
                            <span class="fw-bold text-primary" id="totalExpenseAmount">0.00 ₺</span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary w-100" data-bs-dismiss="modal">Kapat</button>
                    <button class="btn btn-primary w-100" type="submit" id="btnAddExpense">
                        <i class="fas fa-plus me-1"></i>Masraf Ekle
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script src="~/js/turkey-locations.js"></script>
    <script src="~/js/puantaj-common.js"></script>

    <script>
        // Page-specific variables
        let workRecordsTable;
        let existingWorkRecords = {};
        let hasApprovedRecords = false;

        // Disable auto-initialization of common components
        window.autoInitializePuantajCommon = false;

        // G checkbox kontrolü için saat aralığı kontrol fonksiyonu
        function checkNightMealEligibility(day) {
            const startTime = $(`.start-time[data-day="${day}"]`).val();
            const endTime = $(`.end-time[data-day="${day}"]`).val();
            const additionalStartTime = $(`.additional-start-time[data-day="${day}"]`).val();
            const additionalEndTime = $(`.additional-end-time[data-day="${day}"]`).val();

            const gCheckbox = $(`#g_${day}`);

            // Eğer onaylanmış kayıt varsa G checkbox'u disabled kalacak
            const existingRecord = existingWorkRecords[day];
            const isApproved = existingRecord && existingRecord.status === 1;
            if (isApproved) {
                gCheckbox.prop('disabled', true);
                return;
            }

            // Saat aralıklarını kontrol et
            const timeRanges = [];

            if (startTime && endTime) {
                timeRanges.push({ start: startTime, end: endTime });
            }

            if (additionalStartTime && additionalEndTime) {
                timeRanges.push({ start: additionalStartTime, end: additionalEndTime });
            }

            // 01:00-05:00 aralığını kapsayan herhangi bir saat aralığı var mı kontrol et
            const hasNightTime = timeRanges.some(range => {
                return isTimeRangeOverlappingNight(range.start, range.end);
            });

            if (hasNightTime) {
                gCheckbox.prop('disabled', false);
            } else {
                gCheckbox.prop('disabled', true);
                gCheckbox.prop('checked', false); // Eğer gece yemeği hakkı yoksa işaretini kaldır
            }
        }

        // Saat aralığının 01:00-05:00 ile kesişip kesişmediğini kontrol eden fonksiyon
        function isTimeRangeOverlappingNight(startTime, endTime) {
            if (!startTime || !endTime) return false;

            const start = parseTimeToMinutes(startTime);
            const end = parseTimeToMinutes(endTime);
            const nightStart = 1 * 60; // 01:00 = 60 dakika
            const nightEnd = 5 * 60;   // 05:00 = 300 dakika

            // Eğer başlangıç ve bitiş aynı gün içindeyse
            if (start < end) {
                return (start < nightEnd && end > nightStart);
            }
            // Eğer gece yarısını geçiyorsa (örneğin 23:00-07:00)
            else {
                return (start < nightEnd || end > nightStart);
            }
        }

        // Saat formatını dakikaya çeviren fonksiyon
        function parseTimeToMinutes(timeString) {
            const [hours, minutes] = timeString.split(':').map(Number);
            return hours * 60 + minutes;
        }

        $(document).ready(async function () {
            await initializePage();
        });

        async function initializePage() {
            $('body').addClass('sidebar-hidden');

            // Set current year and month
            PuantajCommon.setCurrentYear(new Date().getFullYear());
            PuantajCommon.setCurrentMonth(new Date().getMonth() + 1);

            $('#year-select').val(PuantajCommon.getCurrentYear());
            $('#month-select').val(PuantajCommon.getCurrentMonth());

            // Initialize common components
            await PuantajCommon.initialize();

            // Page-specific event listeners
            setupPageEventListeners();

            // Auto-generate table on page load
            await generateDynamicTable();
        }

        function setupPageEventListeners() {
            $('.btnSaveWorkRecords').on('click', saveWorkRecords);
            $('#year-select, #month-select').on('change', generateDynamicTable);

            // Override expense modal setup for Create page specific behavior
            setupCreatePageExpenseModal();

            // Saat değişikliklerinde G checkbox kontrolü
            setupTimeChangeListeners();
        }

        function setupTimeChangeListeners() {
            // Dinamik olarak eklenen elementler için event delegation kullan
            $(document).on('change blur', '.start-time, .end-time, .additional-start-time, .additional-end-time', function () {
                const day = $(this).data('day');
                if (day) {
                    checkNightMealEligibility(day);
                }
            });
        }

        function setupCreatePageExpenseModal() {
            // Additional setup specific to Create page
            $('#expenseModal').off('show.bs.modal').on('show.bs.modal', function (event) {
                const button = $(event.relatedTarget);
                const day = button.data('day');
                PuantajCommon.setCurrentEditingDay(day);

                if (day) {
                    const date = new Date(PuantajCommon.getCurrentYear(), PuantajCommon.getCurrentMonth() - 1, day);
                    const dateStr = `${day.toString().padStart(2, '0')}.${PuantajCommon.getCurrentMonth().toString().padStart(2, '0')}.${PuantajCommon.getCurrentYear()} ${PuantajCommon.Utils.getDayOfWeekTurkish(date.getDay())}`;
                    $('#modalDateInfo').text(dateStr);

                    // Check if this day's record is approved
                    const existingRecord = existingWorkRecords[day];
                    const isApproved = existingRecord && existingRecord.status === 1;

                    PuantajCommon.ExpenseManager.loadExpensesForDay(day);
                    PuantajCommon.Utils.clearExpenseForm();

                    // Show/hide expense form based on approval status
                    toggleExpenseFormElements(isApproved);

                    // Update expenses display with approval status
                    PuantajCommon.ExpenseManager.displayCurrentExpenses(day, isApproved);
                }
            });
        }

        // Create page specific functions
        async function loadExistingWorkRecords(year, month) {
            try {
                const formattedDate = `${year}-${String(month).padStart(2, '0')}-01`;
                const response = await $.ajax({
                    url: `/puantaj/listem/tarih/${formattedDate}`,
                    type: 'GET'
                });

                if (response.isSuccess && response.data && response.data.length > 0) {
                    existingWorkRecords = {};
                    hasApprovedRecords = false;

                    const expenseData = PuantajCommon.getExpenseData();

                    response.data.forEach(record => {
                        const date = new Date(record.date);
                        const day = date.getDate();
                        existingWorkRecords[day] = record;

                        if (record.status === 1) {
                            hasApprovedRecords = true;
                        }

                        if (record.workRecordExpenses && record.workRecordExpenses.length > 0) {
                            expenseData[day] = record.workRecordExpenses;
                        }
                    });

                    PuantajCommon.setExpenseData(expenseData);

                    if (hasApprovedRecords) {
                        showInfoMessage('Bu ay için onaylanmış kayıtlar bulunmaktadır. Onaylanmış kayıtlar düzenlenemez.', 'warning');
                    } else {
                        showInfoMessage('Bu ay için daha önce girilen veriler yüklenmiştir. Onaylanmadan önce değişiklik yapabilirsiniz.', 'info');
                    }

                    return true;
                } else {
                    existingWorkRecords = {};
                    PuantajCommon.setExpenseData({});
                    hasApprovedRecords = false;
                    hideInfoMessage();
                    return false;
                }
            } catch (error) {
                console.error('Mevcut kayıtlar yüklenirken hata:', error);
                existingWorkRecords = {};
                PuantajCommon.setExpenseData({});
                hasApprovedRecords = false;
                hideInfoMessage();
                return false;
            }
        }

        function showInfoMessage(message, type = 'info') {
            const alertClass = type === 'warning' ? 'alert-warning' : 'alert-info';
            const icon = type === 'warning' ? 'fas fa-exclamation-triangle' : 'fas fa-info-circle';

            $('#infoAlert')
                .removeClass('alert-info alert-warning alert-success')
                .addClass(alertClass)
                .removeClass('d-none');

            $('#infoAlert i')
                .removeClass('fas fa-info-circle fas fa-exclamation-triangle fas fa-check-circle')
                .addClass(icon);

            $('#infoMessage').text(message);
        }

        function hideInfoMessage() {
            $('#infoAlert').addClass('d-none');
        }

        function toggleExpenseFormElements(disable) {
            // Show/hide the entire add expense form section
            if (disable) {
                $('#addExpenseForm').hide();
            } else {
                $('#addExpenseForm').show();
            }

            // Still disable form elements for safety
            $('#addExpenseForm input, #addExpenseForm select, #addExpenseForm textarea').prop('disabled', disable);
            $('#btnAddExpense').prop('disabled', disable);
            $('.remove-expense-btn').prop('disabled', disable);

            if (disable) {
                $('#btnAddExpense').html('<i class="fas fa-lock me-1"></i>Onaylandı');
                $('#btnAddExpense').removeClass('btn-primary').addClass('btn-secondary');
            } else {
                $('#btnAddExpense').html('<i class="fas fa-plus me-1"></i>Masraf Ekle');
                $('#btnAddExpense').removeClass('btn-secondary').addClass('btn-primary');
            }
        }

        async function generateDynamicTable() {
            PuantajCommon.Utils.showTableLoading();

            const year = parseInt($('#year-select').val());
            const month = parseInt($('#month-select').val());

            PuantajCommon.setCurrentYear(year);
            PuantajCommon.setCurrentMonth(month);

            await loadExistingWorkRecords(year, month);

            const daysInMonth = new Date(year, month, 0).getDate();
            $('#workRecordsTableBody').empty();

            await new Promise(resolve => setTimeout(resolve, 300));

            // Generate table rows
            const expenseData = PuantajCommon.getExpenseData();

            for (let day = 1; day <= daysInMonth; day++) {
                const date = new Date(year, month - 1, day);
                const dayOfWeek = PuantajCommon.Utils.getDayOfWeekTurkish(date.getDay());
                const isHoliday = date.getDay() === 0;
                const formattedDate = `${day.toString().padStart(2, '0')}.${month.toString().padStart(2, '0')}.${year} ${dayOfWeek}`;

                const existingRecord = existingWorkRecords[day];
                const isApproved = existingRecord && existingRecord.status === 1;
                const isPending = existingRecord && existingRecord.status === 0;
                const isRejected = existingRecord && existingRecord.status === 2;

                const defaultValues = {
                    excuseReason: existingRecord?.excuseReason || '',
                    startTime: existingRecord ? PuantajCommon.Utils.formatTimeSpan(existingRecord.startTime) : '',
                    endTime: existingRecord ? PuantajCommon.Utils.formatTimeSpan(existingRecord.endTime) : '',
                    additionalStartTime: existingRecord ? PuantajCommon.Utils.formatTimeSpan(existingRecord.additionalStartTime) : '',
                    additionalEndTime: existingRecord ? PuantajCommon.Utils.formatTimeSpan(existingRecord.additionalEndTime) : '',
                    projectId: existingRecord?.projectId || '',
                    equipmentId: existingRecord?.equipmentId || '',
                    province: existingRecord?.province || '',
                    district: existingRecord?.district || '',
                    hasBreakfast: existingRecord?.hasBreakfast || false,
                    hasLunch: existingRecord?.hasLunch || false,
                    hasDinner: existingRecord?.hasDinner || false,
                    hasNightMeal: existingRecord?.hasNightMeal || false,
                    hasTravel: existingRecord?.hasTravel || false
                };

                let statusBadge = PuantajCommon.StatusBadge.generate(null, 'Yeni');
                if (isApproved) {
                    statusBadge = PuantajCommon.StatusBadge.generate(1);
                } else if (isPending) {
                    statusBadge = PuantajCommon.StatusBadge.generate(0);
                } else if (isRejected) {
                    statusBadge = PuantajCommon.StatusBadge.generate(2);
                }

                const disabledAttr = isApproved ? 'disabled' : '';

                const row = createTableRow(day, formattedDate, defaultValues, statusBadge, disabledAttr, isHoliday);
                $('#workRecordsTableBody').append(row);

                // Update expense button if needed
                if (expenseData[day] && expenseData[day].length > 0) {
                    PuantajCommon.ExpenseManager.updateExpenseButton(day);
                }

                // G checkbox durumunu kontrol et
                checkNightMealEligibility(day);
            }

            await PuantajCommon.LocationManager.populateProvincesAndDistricts(existingWorkRecords);

            await PuantajCommon.Select2Manager.initialize();

            PuantajCommon.Utils.hideTableLoading();
        }

        function createTableRow(day, formattedDate, defaultValues, statusBadge, disabledAttr, isHoliday = false) {
            const holidayClass = isHoliday ? 'bg-warning' : 'bg-info';

            return ` <tr data-day="${day}" data-record-id="${existingWorkRecords[day]?.id || ''}" >
            <td class="date-cell">
            <span class="badge ${holidayClass}">${formattedDate}</span>
            <button type="button" class="btn btn-xs btn-outline-success additional-time-btn mt-1 w-75"
            data-day="${day}" title="Ek Saat Ekle" ${disabledAttr}>
            Ek Saat
            <i class="fas fa-plus"></i>
            </button>
            </td>
            <td>
            <select class="form-select form-select-sm excuse-reason-select" data-day="${day}" data-current-value="${defaultValues.excuseReason}" ${disabledAttr}>
            <option value="">Sebep seçin</option>
            </select>
            </td>
            <td>
            <div class="input-group">
            <input type="text"  class="form-control time-input start-time" value="${defaultValues.startTime || ''}"
                                                                                                                                                                               data-day="${day}" placeholder="08:00" ${disabledAttr} >
                                                                                                                                                                        <span class="input-group-text"><i class="fas fa-clock"></i></span>
                                                                                                                                                                    </div>
                                                                                                                                                        <div class="additional-time-section" data-day="${day}" style="display: ${defaultValues.additionalStartTime ? 'block' : 'none'}; margin-top: 2px;">
                                                                                                                                                            <div class="input-group">
                                                                                                                                                            <input type="text" class="form-control form-control-sm additional-start-time"
                                                                                                                                                                   data-day="${day}" placeholder="Ek Başlangıç" value="${defaultValues.additionalStartTime || ''}" ${disabledAttr}>
                                                                                                                                                                          <span class="input-group-text"><i class="fas fa-clock"></i></span>
                                                                                                                                                        </div>
                                                                                                                                                        </div>
                                                                                                                                                                </td>
                                                                                                                                                                <td>
                                                                                                                                                                    <div class="input-group">
                                                                                                                                                                            <input type="text"  class="form-control time-input end-time" value="${defaultValues.endTime || ''}"
                                                                                                                                                                               data-day="${day}" placeholder="17:00" ${disabledAttr}>
                                                                                                                                                                        <span class="input-group-text"><i class="fas fa-clock"></i></span>
                                                                                                                                                                    </div>
                                                                                                                                                        <div class="additional-time-section" data-day="${day}" style="display: ${defaultValues.additionalEndTime ? 'block' : 'none'}; margin-top: 2px;">
                                                                                                                                                             <div class="input-group">
                                                                                                                                                            <input type="text" class="form-control form-control-sm additional-end-time"
                                                                                                                                                                   data-day="${day}" placeholder="Ek Bitiş" value="${defaultValues.additionalEndTime || ''}" ${disabledAttr}>
                                                                                                                                                                  <span class="input-group-text"><i class="fas fa-clock"></i></span>
                                                                                                                                                            </div>
                                                                                                                                                        </div>
                                                                                                                                                                </td>
                                                                                                                                                                                                <td>
                                                                                                                                                                                                       <select class="form-select form-select-sm project-select" data-day="${day}" data-current-value="${defaultValues.projectId}" ${disabledAttr}>
                                                                                                                                                                                                            <option value="">Proje seçin</option>
                                                                                                                                                                                                        </select>
                                                                                                                                                                                                </td>
                                                                                                                                                                                                                            <td>
                                                                                                                                                                                            <select class="form-select form-select-sm equipment-select" data-day="${day}" data-current-value="${defaultValues.equipmentId}" ${disabledAttr}>
                                                                                                                                                                                                <option value="">Ekipman seçin</option>
                                                                                                                                                                                            </select>
                                                                                                                                                                                        </td>
                                                                                                                                                                                                <td>
                                                                                                                                                                                                    <select class="form-select form-select-sm province-select" data-day="${day}" ${disabledAttr}>
                                                                                                                                                                                                    </select>
                                                                                                                                                                                                </td>
                                                                                                                                                                                                <td>
                                                                                                                                                                                                    <select class="form-select form-select-sm district-select" data-day="${day}" ${disabledAttr}>
                                                                                                                                                                                                    </select>
                                                                                                                                                                                                </td>
                                                                                                                                                                                                <td>
                                                                                                                                                                                                    <button type="button" class="btn btn-primary expense-modal-btn w-75"
                                                                                                                                                                                                            data-day="${day}" data-bs-toggle="modal" data-bs-target="#expenseModal" >
                                                                                                                                                                                                        <i class="fas fa-receipt me-1"></i>
                                                                                                                                                                                                        <span class="expense-count" data-day="${day}">0</span> Masraf
                                                                                                                                                                                                    </button>
                                                                                                                                                                                                </td>
                                                                                                                                                                                                <td>
                                                                                                                                                                                                    <div class="meal-section">
                                                                                                                                                                                                        <div class="meal-item">
                                                                                                                                                                                                            <div class="form-check">
                                                                                                                                                                                                                <input class="form-check-input meal-checkbox" type="checkbox" id="s_${day}"
                                                                                                                                                                                                                       data-meal="S" data-day="${day}" ${defaultValues.hasBreakfast ? 'checked' : ''} ${disabledAttr}>
                                                                                                                                                                                                                <label class="form-check-label" for="s_${day}">S</label>
                                                                                                                                                                                                            </div>
                                                                                                                                                                                                        </div>
                                                                                                                                                                                                        <div class="meal-item">
                                                                                                                                                                                                            <div class="form-check">
                                                                                                                                                                                                                <input class="form-check-input meal-checkbox" type="checkbox" id="o_${day}"
                                                                                                                                                                                                                       data-meal="O" data-day="${day}" ${defaultValues.hasLunch ? 'checked' : ''} ${disabledAttr}>
                                                                                                                                                                                                                <label class="form-check-label" for="o_${day}">Ö</label>
                                                                                                                                                                                                            </div>
                                                                                                                                                                                                        </div>
                                                                                                                                                                                                        <div class="meal-item">
                                                                                                                                                                                                            <div class="form-check">
                                                                                                                                                                                                                <input class="form-check-input meal-checkbox" type="checkbox" id="a_${day}"
                                                                                                                                                                                                                       data-meal="A" data-day="${day}" ${defaultValues.hasDinner ? 'checked' : ''} ${disabledAttr}>
                                                                                                                                                                                                                <label class="form-check-label" for="a_${day}">A</label>
                                                                                                                                                                                                            </div>
                                                                                                                                                                                                        </div>
                                                                                                                                                                                                        <div class="meal-item">
                                                                                                                                                                                                            <div class="form-check">
                                                                                                                                                                                                                <input class="form-check-input meal-checkbox" type="checkbox" id="g_${day}"
                                                                                                                                                                                                                       data-meal="G" data-day="${day}" ${defaultValues.hasNightMeal ? 'checked' : ''} ${disabledAttr} disabled>
                                                                                                                                                                                                                <label class="form-check-label" for="g_${day}">G</label>
                                                                                                                                                                                                            </div>
                                                                                                                                                                                                        </div>
                                                                                                                                                                                                    </div>
                                                                                                                                                                                                </td>
                                                                                                                                                                                                   <td>
                                                                                                                                                                                                    <div class="form-check">
                                                                                                                                                                                                                <input class="form-check-input travel-checkbox" type="checkbox" id="t_${day}" data-day="${day}" ${defaultValues.hasTravel ? 'checked' : ''} ${disabledAttr}>
                                                                                                                                                                                                                <label class="form-check-label" for="t_${day}">Y</label>
                                                                                                                                                                                                            </div>
                                                                                                                                                                                                </td>
                                                                                                                                                                                                <td>
                                                                                                                                                                                                    ${statusBadge}
                                                                                                                                                                                                </td>
                                                                                                                                                                                            </tr>
                                                                                                                                                                                        `;
        }

        async function saveWorkRecords() {
            if (hasApprovedRecords) {
                toastr.warning('Onaylanmış kayıtlar bulunduğu için değişiklik yapılamaz!', 'Uyarı!');
                return;
            }

            const workRecords = [];
            const expenseData = PuantajCommon.getExpenseData();

            $('#workRecordsTableBody tr').each(function () {
                const day = $(this).data('day');
                const excuseReason = $(this).find('.excuse-reason-select').val();
                const startTime = $(this).find('.start-time').val();
                const endTime = $(this).find('.end-time').val();
                const additionalStartTime = $(this).find('.additional-start-time').val();
                const additionalEndTime = $(this).find('.additional-end-time').val();
                const projectId = $(this).find('.project-select').val();
                const equipmentId = $(this).find('.equipment-select').val();
                const province = $(this).find('.province-select').val();
                const district = $(this).find('.district-select').val();

                // Day her zaman zorunlu
                if (!day || day === '') {
                    toastr.error('Gün bilgisi boş olamaz!', 'Hata!');
                    throw new Error('Gün bilgisi boş olamaz!');
                }

                // Eğer excuseReason doluysa diğer alanlar zorunlu değil
                if (excuseReason && excuseReason !== '') {
                    // excuseReason varsa devam et (diğer alanlar null olabilir)
                } else {
                    // excuseReason yoksa normal kontrolleri yap
                    const hasRequiredData =
                        (startTime && startTime.trim() !== '') &&
                        (endTime && endTime.trim() !== '') &&
                        (projectId && projectId !== '') &&
                        (equipmentId && equipmentId !== '') &&
                        (province && province !== '') &&
                        (district && district !== '');

                    if (!hasRequiredData) {
                        return; // Bu satırı atla, boş satır
                    }
                }
                const dayExpenses = expenseData[day] || [];
                const expenses = dayExpenses.map(exp => ({
                    expenseId: exp.expenseId,
                    description: exp.description || null,
                    amount: exp.amount,
                    receiptFile: exp.receiptFile
                }));

                const hasBreakfast = $(this).find('.meal-checkbox[data-meal="S"]').is(':checked');
                const hasLunch = $(this).find('.meal-checkbox[data-meal="O"]').is(':checked');
                const hasDinner = $(this).find('.meal-checkbox[data-meal="A"]').is(':checked');
                const hasNightMeal = $(this).find('.meal-checkbox[data-meal="G"]').is(':checked');
                const hasTravel = $(this).find('.travel-checkbox').is(':checked');

                const formattedDate = `${PuantajCommon.getCurrentYear()}-${String(PuantajCommon.getCurrentMonth()).padStart(2, '0')}-${String(day).padStart(2, '0')}`;

                workRecords.push({
                    Date: formattedDate,
                    ExcuseReason: excuseReason || "",
                    StartTime: startTime || "",
                    EndTime: endTime || "",
                    AdditionalStartTime: additionalStartTime || "",
                    AdditionalEndTime: additionalEndTime || "",
                    ProjectId: projectId || "",
                    EquipmentId: equipmentId || "",
                    Province: province || "",
                    District: district || "",
                    HasBreakfast: hasBreakfast,
                    HasLunch: hasLunch,
                    HasDinner: hasDinner,
                    HasNightMeal: hasNightMeal,
                    HasTravel: hasTravel,
                    WorkRecordExpenses: expenses
                });
            });

            // Eğer hiç kayıt yoksa uyarı ver
            if (workRecords.length === 0) {
                toastr.warning('Kaydedilecek veri bulunamadı!', 'Uyarı!');
                return;
            }

            try {
                $('.btnSaveWorkRecords').prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-2"></i>Kaydediliyor...');

                // FormData oluştur
                const formData = new FormData();
                formData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());

                // Her work record için form data ekle
                workRecords.forEach((record, index) => {
                    formData.append(`[${index}].Date`, record.Date);
                    formData.append(`[${index}].ExcuseReason`, record.ExcuseReason);
                    formData.append(`[${index}].StartTime`, record.StartTime);
                    formData.append(`[${index}].EndTime`, record.EndTime);
                    formData.append(`[${index}].AdditionalStartTime`, record.AdditionalStartTime);
                    formData.append(`[${index}].AdditionalEndTime`, record.AdditionalEndTime);
                    formData.append(`[${index}].ProjectId`, record.ProjectId);
                    formData.append(`[${index}].EquipmentId`, record.EquipmentId);
                    formData.append(`[${index}].Province`, record.Province);
                    formData.append(`[${index}].District`, record.District);
                    formData.append(`[${index}].HasBreakfast`, record.HasBreakfast);
                    formData.append(`[${index}].HasLunch`, record.HasLunch);
                    formData.append(`[${index}].HasDinner`, record.HasDinner);
                    formData.append(`[${index}].HasNightMeal`, record.HasNightMeal);
                    formData.append(`[${index}].HasTravel`, record.HasTravel);

                    // Expenses için
                    if (record.WorkRecordExpenses && record.WorkRecordExpenses.length > 0) {
                        record.WorkRecordExpenses.forEach((expense, expIndex) => {
                            formData.append(`[${index}].WorkRecordExpenses[${expIndex}].ExpenseId`, expense.expenseId);
                            formData.append(`[${index}].WorkRecordExpenses[${expIndex}].Description`, expense.description || "");
                            formData.append(`[${index}].WorkRecordExpenses[${expIndex}].Amount`, expense.amount);
                            // File upload için - sadece yeni dosyalar için
                            if (expense.receiptFile) {
                                formData.append(`[${index}].WorkRecordExpenses[${expIndex}].File.FormFile`, expense.receiptFile);
                            }
                        });
                    }
                });

                const response = await $.ajax({
                    url: '/puantaj/toplu-ekle',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false
                });

                if (response.isSuccess) {
                    toastr.success(response.message, 'Başarılı!');
                    await generateDynamicTable();
                } else {
                    toastr.error(response.message, 'Hata!');
                }
            } catch (error) {
                PuantajCommon.AjaxHelper.handleError(error, 'Puantaj kaydedilirken bir hata oluştu.');
            } finally {
                $('.btnSaveWorkRecords').prop('disabled', false)
                    .html('<i class="fas fa-save me-2"></i>Kaydet');
            }
        }
    </script>
}